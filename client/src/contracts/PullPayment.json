{
  "contractName": "PullPayment",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdrawPayments",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dest",
          "type": "address"
        }
      ],
      "name": "payments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"}],\"name\":\"payments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdrawPayments\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Simple implementation of a https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment] strategy, where the paying contract doesn't interact directly with the receiver account, which must withdraw its payments itself. Pull-payments are often considered the best practice when it comes to sending Ether, security-wise. It prevents recipients from blocking execution, and eliminates reentrancy concerns. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]. To use, derive from the `PullPayment` contract, and use {_asyncTransfer} instead of Solidity's `transfer` function. Payees can query their due payments with {payments}, and retrieve them with {withdrawPayments}.\",\"kind\":\"dev\",\"methods\":{\"payments(address)\":{\"details\":\"Returns the payments owed to an address.\",\"params\":{\"dest\":\"The creditor's address.\"}},\"withdrawPayments(address)\":{\"details\":\"Withdraw accumulated payments, forwarding all gas to the recipient. Note that _any_ account can call this function, not just the `payee`. This means that contracts unaware of the `PullPayment` protocol can still receive funds this way, by having a separate account call {withdrawPayments}. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.\",\"params\":{\"payee\":\"Whose payments will be withdrawn.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/cr100131/apps/MyPortfolio/client/node_modules/@openzeppelin/contracts/payment/PullPayment.sol\":\"PullPayment\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/cr100131/apps/MyPortfolio/client/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x3c6281d503738fa658e9ff6cdb1a86bb05c4cdc3ce936385019c60d4bfc366ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32c0d85ab2b14168c8a671c2023534237cf9ee03fb5315b90b6fe1f2b42d5aa7\",\"dweb:/ipfs/QmeThfq2TdGY3ySCYzYwM2R4mDbT6iDKKhkKHdqF96dP3H\"]},\"/C/Users/cr100131/apps/MyPortfolio/client/node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x02ad8ebd6ed6eb3f9e302300ecdf1cdaba9c4127128b63c1e6b39597aef7ffd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10ebe46c430488c1af5915fa5e66cee4f667b9c04b54b9c686526af0878b6c5f\",\"dweb:/ipfs/QmTexh6whTFTemA25s1HA9C1KaEgVngAN3rgJmR6PvBkKh\"]},\"/C/Users/cr100131/apps/MyPortfolio/client/node_modules/@openzeppelin/contracts/payment/PullPayment.sol\":{\"keccak256\":\"0x00ad05aa577a07f3f3586860814ef6b89738efb5479569538a2b8bc5dec68c33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f31ab8c7629150454bfb1cf63418d339877c33d21f95dc97a47ead69d3874b8\",\"dweb:/ipfs/QmWCv3nBqYba6qABEithXVG59Tz9vWi4f7hzTxPnqa95UK\"]},\"/C/Users/cr100131/apps/MyPortfolio/client/node_modules/@openzeppelin/contracts/payment/escrow/Escrow.sol\":{\"keccak256\":\"0xd1ad7c055efcaa14294e51fdef8c2f8f9a2ee1b622cfef50b0bec2ed56339a49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86390a279edb3e655529aaeb96b4a62cf50bf6dcb202f481336af00e949ab20e\",\"dweb:/ipfs/QmUFZEQi3T6R5YMqTErAjp65LAmknZNGf9pX6rhz1fMuFn\"]},\"/C/Users/cr100131/apps/MyPortfolio/client/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"/C/Users/cr100131/apps/MyPortfolio/client/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xb936169a9b13d13224f49b0558583538c54c081b21f60e47c75ea6babbcd47cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b88f74b91c13fd2cc539e0281d530a8fe0ddf60c534d47fb4c14782781eaa0a\",\"dweb:/ipfs/QmWS4az1tTAPgWexsyU3PiroFEDr11EZUCFX8taGgprevs\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.4.21 <0.9.0;\n\nimport \"./escrow/Escrow.sol\";\n\n/**\n * @dev Simple implementation of a\n * https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment]\n * strategy, where the paying contract doesn't interact directly with the\n * receiver account, which must withdraw its payments itself.\n *\n * Pull-payments are often considered the best practice when it comes to sending\n * Ether, security-wise. It prevents recipients from blocking execution, and\n * eliminates reentrancy concerns.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n *\n * To use, derive from the `PullPayment` contract, and use {_asyncTransfer}\n * instead of Solidity's `transfer` function. Payees can query their due\n * payments with {payments}, and retrieve them with {withdrawPayments}.\n */\nabstract contract PullPayment {\n    Escrow private _escrow;\n\n    constructor () internal {\n        _escrow = new Escrow();\n    }\n\n    /**\n     * @dev Withdraw accumulated payments, forwarding all gas to the recipient.\n     *\n     * Note that _any_ account can call this function, not just the `payee`.\n     * This means that contracts unaware of the `PullPayment` protocol can still\n     * receive funds this way, by having a separate account call\n     * {withdrawPayments}.\n     *\n     * WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n     * Make sure you trust the recipient, or are either following the\n     * checks-effects-interactions pattern or using {ReentrancyGuard}.\n     *\n     * @param payee Whose payments will be withdrawn.\n     */\n    function withdrawPayments(address payable payee) public virtual {\n        _escrow.withdraw(payee);\n    }\n\n    /**\n     * @dev Returns the payments owed to an address.\n     * @param dest The creditor's address.\n     */\n    function payments(address dest) public view returns (uint256) {\n        return _escrow.depositsOf(dest);\n    }\n\n    /**\n     * @dev Called by the payer to store the sent amount as credit to be pulled.\n     * Funds sent in this way are stored in an intermediate {Escrow} contract, so\n     * there is no danger of them being spent before withdrawal.\n     *\n     * @param dest The destination address of the funds.\n     * @param amount The amount to transfer.\n     */\n    function _asyncTransfer(address dest, uint256 amount) internal virtual {\n        _escrow.deposit{ value: amount }(dest);\n    }\n}\n",
  "sourcePath": "C:\\Users\\cr100131\\apps\\MyPortfolio\\client\\node_modules\\@openzeppelin\\contracts\\payment\\PullPayment.sol",
  "ast": {
    "absolutePath": "/C/Users/cr100131/apps/MyPortfolio/client/node_modules/@openzeppelin/contracts/payment/PullPayment.sol",
    "exportedSymbols": {
      "Address": [
        2896
      ],
      "Context": [
        2919
      ],
      "Escrow": [
        720
      ],
      "Ownable": [
        109
      ],
      "PullPayment": [
        615
      ],
      "SafeMath": [
        554
      ]
    },
    "id": 616,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 556,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:3"
      },
      {
        "absolutePath": "/C/Users/cr100131/apps/MyPortfolio/client/node_modules/@openzeppelin/contracts/payment/escrow/Escrow.sol",
        "file": "./escrow/Escrow.sol",
        "id": 557,
        "nodeType": "ImportDirective",
        "scope": 616,
        "sourceUnit": 721,
        "src": "67:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [
          720
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 558,
          "nodeType": "StructuredDocumentation",
          "src": "98:949:3",
          "text": " @dev Simple implementation of a\n https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment]\n strategy, where the paying contract doesn't interact directly with the\n receiver account, which must withdraw its payments itself.\n Pull-payments are often considered the best practice when it comes to sending\n Ether, security-wise. It prevents recipients from blocking execution, and\n eliminates reentrancy concerns.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n To use, derive from the `PullPayment` contract, and use {_asyncTransfer}\n instead of Solidity's `transfer` function. Payees can query their due\n payments with {payments}, and retrieve them with {withdrawPayments}."
        },
        "fullyImplemented": true,
        "id": 615,
        "linearizedBaseContracts": [
          615
        ],
        "name": "PullPayment",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 560,
            "mutability": "mutable",
            "name": "_escrow",
            "nodeType": "VariableDeclaration",
            "scope": 615,
            "src": "1084:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Escrow_$720",
              "typeString": "contract Escrow"
            },
            "typeName": {
              "id": 559,
              "name": "Escrow",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 720,
              "src": "1084:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Escrow_$720",
                "typeString": "contract Escrow"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 569,
              "nodeType": "Block",
              "src": "1137:39:3",
              "statements": [
                {
                  "expression": {
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 563,
                      "name": "_escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 560,
                      "src": "1147:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Escrow_$720",
                        "typeString": "contract Escrow"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1157:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Escrow_$720_$",
                          "typeString": "function () returns (contract Escrow)"
                        },
                        "typeName": {
                          "id": 564,
                          "name": "Escrow",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 720,
                          "src": "1161:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Escrow_$720",
                            "typeString": "contract Escrow"
                          }
                        }
                      },
                      "id": 566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1157:12:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Escrow_$720",
                        "typeString": "contract Escrow"
                      }
                    },
                    "src": "1147:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Escrow_$720",
                      "typeString": "contract Escrow"
                    }
                  },
                  "id": 568,
                  "nodeType": "ExpressionStatement",
                  "src": "1147:22:3"
                }
              ]
            },
            "id": 570,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1125:2:3"
            },
            "returnParameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1137:0:3"
            },
            "scope": 615,
            "src": "1113:63:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 582,
              "nodeType": "Block",
              "src": "1889:40:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 579,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 573,
                        "src": "1916:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 576,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "1899:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Escrow_$720",
                          "typeString": "contract Escrow"
                        }
                      },
                      "id": 578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 719,
                      "src": "1899:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1899:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "1899:23:3"
                }
              ]
            },
            "documentation": {
              "id": 571,
              "nodeType": "StructuredDocumentation",
              "src": "1182:638:3",
              "text": " @dev Withdraw accumulated payments, forwarding all gas to the recipient.\n Note that _any_ account can call this function, not just the `payee`.\n This means that contracts unaware of the `PullPayment` protocol can still\n receive funds this way, by having a separate account call\n {withdrawPayments}.\n WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n Make sure you trust the recipient, or are either following the\n checks-effects-interactions pattern or using {ReentrancyGuard}.\n @param payee Whose payments will be withdrawn."
            },
            "functionSelector": "31b3eb94",
            "id": 583,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawPayments",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 573,
                  "mutability": "mutable",
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "1851:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 572,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1851:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1850:23:3"
            },
            "returnParameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1889:0:3"
            },
            "scope": 615,
            "src": "1825:104:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 596,
              "nodeType": "Block",
              "src": "2109:48:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 593,
                        "name": "dest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 586,
                        "src": "2145:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 591,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "2126:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Escrow_$720",
                          "typeString": "contract Escrow"
                        }
                      },
                      "id": 592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositsOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 657,
                      "src": "2126:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2126:24:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 590,
                  "id": 595,
                  "nodeType": "Return",
                  "src": "2119:31:3"
                }
              ]
            },
            "documentation": {
              "id": 584,
              "nodeType": "StructuredDocumentation",
              "src": "1935:107:3",
              "text": " @dev Returns the payments owed to an address.\n @param dest The creditor's address."
            },
            "functionSelector": "e2982c21",
            "id": 597,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payments",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 586,
                  "mutability": "mutable",
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "scope": 597,
                  "src": "2065:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2065:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2064:14:3"
            },
            "returnParameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 589,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 597,
                  "src": "2100:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2100:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2099:9:3"
            },
            "scope": 615,
            "src": "2047:110:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 613,
              "nodeType": "Block",
              "src": "2587:55:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 610,
                        "name": "dest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 600,
                        "src": "2630:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 605,
                          "name": "_escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 560,
                          "src": "2597:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Escrow_$720",
                            "typeString": "contract Escrow"
                          }
                        },
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 687,
                        "src": "2597:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 608,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 602,
                          "src": "2621:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2597:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2597:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 612,
                  "nodeType": "ExpressionStatement",
                  "src": "2597:38:3"
                }
              ]
            },
            "documentation": {
              "id": 598,
              "nodeType": "StructuredDocumentation",
              "src": "2163:348:3",
              "text": " @dev Called by the payer to store the sent amount as credit to be pulled.\n Funds sent in this way are stored in an intermediate {Escrow} contract, so\n there is no danger of them being spent before withdrawal.\n @param dest The destination address of the funds.\n @param amount The amount to transfer."
            },
            "id": 614,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_asyncTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 600,
                  "mutability": "mutable",
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "2540:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2540:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 602,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "2554:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2554:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2539:30:3"
            },
            "returnParameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2587:0:3"
            },
            "scope": 615,
            "src": "2516:126:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 616,
        "src": "1048:1596:3"
      }
    ],
    "src": "33:2612:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/cr100131/apps/MyPortfolio/client/node_modules/@openzeppelin/contracts/payment/PullPayment.sol",
      "exportedSymbols": {
        "Address": [
          2896
        ],
        "Context": [
          2919
        ],
        "Escrow": [
          720
        ],
        "Ownable": [
          109
        ],
        "PullPayment": [
          615
        ],
        "SafeMath": [
          554
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 556,
        "name": "PragmaDirective",
        "src": "33:32:3"
      },
      {
        "attributes": {
          "SourceUnit": 721,
          "absolutePath": "/C/Users/cr100131/apps/MyPortfolio/client/node_modules/@openzeppelin/contracts/payment/escrow/Escrow.sol",
          "file": "./escrow/Escrow.sol",
          "scope": 616,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 557,
        "name": "ImportDirective",
        "src": "67:29:3"
      },
      {
        "attributes": {
          "abstract": true,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            720
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            615
          ],
          "name": "PullPayment",
          "scope": 616
        },
        "children": [
          {
            "attributes": {
              "text": " @dev Simple implementation of a\n https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment]\n strategy, where the paying contract doesn't interact directly with the\n receiver account, which must withdraw its payments itself.\n Pull-payments are often considered the best practice when it comes to sending\n Ether, security-wise. It prevents recipients from blocking execution, and\n eliminates reentrancy concerns.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n To use, derive from the `PullPayment` contract, and use {_asyncTransfer}\n instead of Solidity's `transfer` function. Payees can query their due\n payments with {payments}, and retrieve them with {withdrawPayments}."
            },
            "id": 558,
            "name": "StructuredDocumentation",
            "src": "98:949:3"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_escrow",
              "scope": 615,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract Escrow",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "Escrow",
                  "referencedDeclaration": 720,
                  "type": "contract Escrow"
                },
                "id": 559,
                "name": "UserDefinedTypeName",
                "src": "1084:6:3"
              }
            ],
            "id": 560,
            "name": "VariableDeclaration",
            "src": "1084:22:3"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 615,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 561,
                "name": "ParameterList",
                "src": "1125:2:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 562,
                "name": "ParameterList",
                "src": "1137:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract Escrow"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 560,
                              "type": "contract Escrow",
                              "value": "_escrow"
                            },
                            "id": 563,
                            "name": "Identifier",
                            "src": "1147:7:3"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract Escrow",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "function () returns (contract Escrow)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "Escrow",
                                      "referencedDeclaration": 720,
                                      "type": "contract Escrow"
                                    },
                                    "id": 564,
                                    "name": "UserDefinedTypeName",
                                    "src": "1161:6:3"
                                  }
                                ],
                                "id": 565,
                                "name": "NewExpression",
                                "src": "1157:10:3"
                              }
                            ],
                            "id": 566,
                            "name": "FunctionCall",
                            "src": "1157:12:3"
                          }
                        ],
                        "id": 567,
                        "name": "Assignment",
                        "src": "1147:22:3"
                      }
                    ],
                    "id": 568,
                    "name": "ExpressionStatement",
                    "src": "1147:22:3"
                  }
                ],
                "id": 569,
                "name": "Block",
                "src": "1137:39:3"
              }
            ],
            "id": 570,
            "name": "FunctionDefinition",
            "src": "1113:63:3"
          },
          {
            "attributes": {
              "functionSelector": "31b3eb94",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawPayments",
              "scope": 615,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Withdraw accumulated payments, forwarding all gas to the recipient.\n Note that _any_ account can call this function, not just the `payee`.\n This means that contracts unaware of the `PullPayment` protocol can still\n receive funds this way, by having a separate account call\n {withdrawPayments}.\n WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n Make sure you trust the recipient, or are either following the\n checks-effects-interactions pattern or using {ReentrancyGuard}.\n @param payee Whose payments will be withdrawn."
                },
                "id": 571,
                "name": "StructuredDocumentation",
                "src": "1182:638:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "payee",
                      "scope": 583,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 572,
                        "name": "ElementaryTypeName",
                        "src": "1851:15:3"
                      }
                    ],
                    "id": 573,
                    "name": "VariableDeclaration",
                    "src": "1851:21:3"
                  }
                ],
                "id": 574,
                "name": "ParameterList",
                "src": "1850:23:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 575,
                "name": "ParameterList",
                "src": "1889:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "withdraw",
                              "referencedDeclaration": 719,
                              "type": "function (address payable) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 560,
                                  "type": "contract Escrow",
                                  "value": "_escrow"
                                },
                                "id": 576,
                                "name": "Identifier",
                                "src": "1899:7:3"
                              }
                            ],
                            "id": 578,
                            "name": "MemberAccess",
                            "src": "1899:16:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 573,
                              "type": "address payable",
                              "value": "payee"
                            },
                            "id": 579,
                            "name": "Identifier",
                            "src": "1916:5:3"
                          }
                        ],
                        "id": 580,
                        "name": "FunctionCall",
                        "src": "1899:23:3"
                      }
                    ],
                    "id": 581,
                    "name": "ExpressionStatement",
                    "src": "1899:23:3"
                  }
                ],
                "id": 582,
                "name": "Block",
                "src": "1889:40:3"
              }
            ],
            "id": 583,
            "name": "FunctionDefinition",
            "src": "1825:104:3"
          },
          {
            "attributes": {
              "functionSelector": "e2982c21",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "payments",
              "scope": 615,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Returns the payments owed to an address.\n @param dest The creditor's address."
                },
                "id": 584,
                "name": "StructuredDocumentation",
                "src": "1935:107:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "dest",
                      "scope": 597,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 585,
                        "name": "ElementaryTypeName",
                        "src": "2065:7:3"
                      }
                    ],
                    "id": 586,
                    "name": "VariableDeclaration",
                    "src": "2065:12:3"
                  }
                ],
                "id": 587,
                "name": "ParameterList",
                "src": "2064:14:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 597,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 588,
                        "name": "ElementaryTypeName",
                        "src": "2100:7:3"
                      }
                    ],
                    "id": 589,
                    "name": "VariableDeclaration",
                    "src": "2100:7:3"
                  }
                ],
                "id": 590,
                "name": "ParameterList",
                "src": "2099:9:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 590
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "depositsOf",
                              "referencedDeclaration": 657,
                              "type": "function (address) view external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 560,
                                  "type": "contract Escrow",
                                  "value": "_escrow"
                                },
                                "id": 591,
                                "name": "Identifier",
                                "src": "2126:7:3"
                              }
                            ],
                            "id": 592,
                            "name": "MemberAccess",
                            "src": "2126:18:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 586,
                              "type": "address",
                              "value": "dest"
                            },
                            "id": 593,
                            "name": "Identifier",
                            "src": "2145:4:3"
                          }
                        ],
                        "id": 594,
                        "name": "FunctionCall",
                        "src": "2126:24:3"
                      }
                    ],
                    "id": 595,
                    "name": "Return",
                    "src": "2119:31:3"
                  }
                ],
                "id": 596,
                "name": "Block",
                "src": "2109:48:3"
              }
            ],
            "id": 597,
            "name": "FunctionDefinition",
            "src": "2047:110:3"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_asyncTransfer",
              "scope": 615,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Called by the payer to store the sent amount as credit to be pulled.\n Funds sent in this way are stored in an intermediate {Escrow} contract, so\n there is no danger of them being spent before withdrawal.\n @param dest The destination address of the funds.\n @param amount The amount to transfer."
                },
                "id": 598,
                "name": "StructuredDocumentation",
                "src": "2163:348:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "dest",
                      "scope": 614,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 599,
                        "name": "ElementaryTypeName",
                        "src": "2540:7:3"
                      }
                    ],
                    "id": 600,
                    "name": "VariableDeclaration",
                    "src": "2540:12:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 614,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 601,
                        "name": "ElementaryTypeName",
                        "src": "2554:7:3"
                      }
                    ],
                    "id": 602,
                    "name": "VariableDeclaration",
                    "src": "2554:14:3"
                  }
                ],
                "id": 603,
                "name": "ParameterList",
                "src": "2539:30:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 604,
                "name": "ParameterList",
                "src": "2587:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "type": "function (address) payable external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "deposit",
                                  "referencedDeclaration": 687,
                                  "type": "function (address) payable external"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 560,
                                      "type": "contract Escrow",
                                      "value": "_escrow"
                                    },
                                    "id": 605,
                                    "name": "Identifier",
                                    "src": "2597:7:3"
                                  }
                                ],
                                "id": 607,
                                "name": "MemberAccess",
                                "src": "2597:15:3"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 602,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 608,
                                "name": "Identifier",
                                "src": "2621:6:3"
                              }
                            ],
                            "id": 609,
                            "name": "FunctionCallOptions",
                            "src": "2597:32:3"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 600,
                              "type": "address",
                              "value": "dest"
                            },
                            "id": 610,
                            "name": "Identifier",
                            "src": "2630:4:3"
                          }
                        ],
                        "id": 611,
                        "name": "FunctionCall",
                        "src": "2597:38:3"
                      }
                    ],
                    "id": 612,
                    "name": "ExpressionStatement",
                    "src": "2597:38:3"
                  }
                ],
                "id": 613,
                "name": "Block",
                "src": "2587:55:3"
              }
            ],
            "id": 614,
            "name": "FunctionDefinition",
            "src": "2516:126:3"
          }
        ],
        "id": 615,
        "name": "ContractDefinition",
        "src": "1048:1596:3"
      }
    ],
    "id": 616,
    "name": "SourceUnit",
    "src": "33:2612:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-28T18:50:35.759Z",
  "devdoc": {
    "details": "Simple implementation of a https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment] strategy, where the paying contract doesn't interact directly with the receiver account, which must withdraw its payments itself. Pull-payments are often considered the best practice when it comes to sending Ether, security-wise. It prevents recipients from blocking execution, and eliminates reentrancy concerns. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]. To use, derive from the `PullPayment` contract, and use {_asyncTransfer} instead of Solidity's `transfer` function. Payees can query their due payments with {payments}, and retrieve them with {withdrawPayments}.",
    "kind": "dev",
    "methods": {
      "payments(address)": {
        "details": "Returns the payments owed to an address.",
        "params": {
          "dest": "The creditor's address."
        }
      },
      "withdrawPayments(address)": {
        "details": "Withdraw accumulated payments, forwarding all gas to the recipient. Note that _any_ account can call this function, not just the `payee`. This means that contracts unaware of the `PullPayment` protocol can still receive funds this way, by having a separate account call {withdrawPayments}. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.",
        "params": {
          "payee": "Whose payments will be withdrawn."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}